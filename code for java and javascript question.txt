A. Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it.

code.
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ShuffleArray {
    public static void main(String[] args) {
        // Create an ArrayList with the values (1, 2, 3, 4, 5, 6, 7)
        List<Integer> list = new ArrayList<>();
        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);
        list.add(5);
        list.add(6);
        list.add(7);

        // Shuffle the list
        Collections.shuffle(list);

        // Convert the shuffled list back to an array if needed
        Integer[] shuffledArray = list.toArray(new Integer[0]);

        // Print the shuffled array
        System.out.println("Shuffled Array: ");
        for (int value : shuffledArray) {
            System.out.print(value + " ");
        }
    }
}
output:
Shuffled Array:
3 7 5 1 6 4 2
 
B. Enter a Roman Number as input and convert it to an integer. (ex IX = 9)

code:
import java.util.HashMap;
import java.util.Map;

public class RomanToInteger {
    public static void main(String[] args) {
        String romanNumeral = "IX"; // Replace with the Roman numeral you want to convert

        int result = romanToInt(romanNumeral);
        System.out.println("The integer equivalent of " + romanNumeral + " is: " + result);
    }

    public static int romanToInt(String s) {
        Map<Character, Integer> romanValues = new HashMap<>();
        romanValues.put('I', 1);
        romanValues.put('V', 5);
        romanValues.put('X', 10);
        romanValues.put('L', 50);
        romanValues.put('C', 100);
        romanValues.put('D', 500);
        romanValues.put('M', 1000);

        int result = 0;
        int prevValue = 0;

        for (int i = s.length() - 1; i >= 0; i--) {
            int currentValue = romanValues.get(s.charAt(i));
            
            if (currentValue < prevValue) {
                result -= currentValue;
            } else {
                result += currentValue;
            }

            prevValue = currentValue;
        }

        return result;
    }
}
 output:
The integer equivalent of IX is: 9


C. Check if the input is pangram or not. (Pangram is a sentence that contains all the alphabet
from a-z)

code:
public class PangramChecker {
    public static void main(String[] args) {
        String input = "The quick brown fox jumps over the lazy dog"; // Replace with your input sentence
        boolean isPangram = isPangram(input);

        if (isPangram) {
            System.out.println("The input is a pangram.");
        } else {
            System.out.println("The input is not a pangram.");
        }
    }

    public static boolean isPangram(String input) {
        // Create a boolean array to mark the presence of each letter from 'a' to 'z'
        boolean[] alphabet = new boolean[26];

        // Convert the input to lowercase for case insensitivity
        input = input.toLowerCase();

        for (int i = 0; i < input.length(); i++) {
            char c = input.charAt(i);
            if (c >= 'a' && c <= 'z') {
                // Mark the corresponding letter as present
                alphabet[c - 'a'] = true;
            }
        }

        // Check if all letters from 'a' to 'z' are present
        for (boolean isPresent : alphabet) {
            if (!isPresent) {
                return false;
            }
        }

        return true;
    }
}

2 JavaScript


A. Take a sentence as an input and reverse every word in that sentence. 
a. Example - This is a sunny day > shiT si a ynnus yad.

code:
function reverseWordsInSentence(sentence) {
  // Split the sentence into words
  const words = sentence.split(' ');

  // Reverse each word and create an array of reversed words
  const reversedWords = words.map(word => {
    return word.split('').reverse().join('');
  });

  // Join the reversed words to form the reversed sentence
  const reversedSentence = reversedWords.join(' ');

  return reversedSentence;
}

const inputSentence = "This is a sunny day";
const reversedSentence = reverseWordsInSentence(inputSentence);

console.log(reversedSentence);
 
output:
shiT si a ynnus yad


B. Perform sorting of an array in descending order.

code:

const numbers = [5, 2, 9, 1, 5, 6];

// Use the sort method with a custom compare function for descending order
numbers.sort(function(a, b) {
  return b - a;
});

console.log(numbers); // Output: [9, 6, 5, 5, 2, 1]
